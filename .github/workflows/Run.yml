name: run

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  GRADLE_OPTS: >-
    -Dorg.gradle.jvmargs="-Xmx3G -XX:MaxMetaspaceSize=1G -XX:SoftRefLRUPolicyMSPerMB=10 -XX:+UseParallelGC"

jobs:
  build-binaries:
    name: Build binaries
    runs-on: macos-13

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '23'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: >-
          ./gradlew jvmDistZip linkReleaseExecutableLinuxX64 linkReleaseExecutableLinuxArm64
          linkReleaseExecutableMacosX64 linkReleaseExecutableMacosArm64

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            chasm-runner/build/bin/
            chasm-runner/build/distributions/wehdemo-jvm.zip
            chasm-runner/build/wasmBinary/
            chasm-runner/preopened_sample


  run:
    strategy:
      matrix:
        os: [macos-13, macos-latest, ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: macos-13
            target: macosX64
          - os: macos-latest
            target: macosArm64
          - os: ubuntu-latest
            target: linuxX64
          - os: ubuntu-24.04-arm
            target: linuxArm64
      fail-fast: false
    name: Run on ${{ matrix.os }}
    needs: build-binaries
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install required software
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install moreutils
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install moreutils
          fi
        shell: bash

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '23'

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - run: unzip build/distributions/wehdemo-jvm.zip

      - name: Run on JVM ${{ matrix.os }}
        run: time wehdemo-jvm/bin/wehdemo | ts -s -m "%.s"

      - name: Run release executable ${{ env.RUNNER_OS }} ${{ env.RUNNER_ARCH }}
        run: >-
          chmod 775 build/bin/${{ matrix.target }}/releaseExecutable/chasm-runner.kexe &&
          time build/bin/${{ matrix.target }}/releaseExecutable/chasm-runner.kexe
          build/wasmBinary/wehdemo-wasm-code-wasm-wasi.wasm
          preopened_sample
